from OpenGL.GLUT import *
from OpenGL.GLU import *
from OpenGL.GL import *
import math

vertices= []

linhas = []

faces = []

n = 3
a = 2*math.pi/n

vertices += [[0,2,0]]
vertices += [[0,0,0]]

for i in range(0,n):	
	x = math.cos(a * i)
	y = 0
	z = math.sin(a * i)
	vertices += [ [x,y,z] ]
	
	linhas += [[0,i+2]]
	linhas += [[i+2,i+3]]
	faces += [[0,i+2,i+3]]
	faces += [[1,i+2,i+3]]




def PiramideN():
    glBegin(GL_TRIANGLES)
    i = 0
    for face in faces:
        #glColor3fv(0,1,0)
        for vertex in face:
            #glColor3fv(0,1,0)
            glVertex3fv(vertices[vertex])
        i = i+1
    glEnd()
    
    glColor3fv((0,0.5,0))
    glBegin(GL_LINES)
    for linha in linhas:
        for vertex in linha:
            glVertex3fv(vertices[vertex])
    glEnd()

def abacaxi():
	
    glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT)
    glRotatef(2,200,1,3)
    PiramideN()
    glutSwapBuffers()
    
def timer(i):
    glutPostRedisplay()
    glutTimerFunc(50,timer,1)

# PROGRAMA PRINCIPAL
glutInit(sys.argv)
glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGBA | GLUT_DEPTH | GLUT_MULTISAMPLE)
glutInitWindowSize(800,600)
glutCreateWindow("PIRAMIDE")
glutDisplayFunc(abacaxi)
glEnable(GL_MULTISAMPLE)
glEnable(GL_DEPTH_TEST)
glClearColor(0.,0.,0.,1.)
gluPerspective(45,800.0/600.0,0.1,50.0)
glTranslatef(0.0,0.0,-6)
glRotatef(45,1,1,1)
glutTimerFunc(50,timer,1)
glutMainLoop()
